# Description: Resource file for bash supportconfig plugins
# Virtual Package: supportconfig-plugin-resource
# Modified: 2011 Dec 23
# Version: 1.0.1-3

# Functions:
# section_header <string>
# pconf_files <list>
# plog_files <int> <list>
# plugin_message <string>
# plugin_tag <label> <string>
# plugin_command <command>
# validate_rpm <rpm_name>

section_header() {
	echo
	echo "#==[ Section Header ]===============================#"
	echo "# $*"
	echo
}

plugin_tag() {
	TAG_LABEL="$1"
	shift
	echo "#==[ $TAG_LABEL ]===============================#"
	echo "# $*"
	echo
}

pconf_files() {
	for CONF in $@
	do
		echo "#==[ Configuration File ]===========================#"
		if [ -f $CONF ]; then
			echo "# $CONF"
			if (( ADD_OPTION_LOGS )); then
				sed -e 's///g' $CONF
			else
				sed -e '/^[[:space:]]*#/d' -e '/^[[:space:]]*;/d' -e '/^[[:space:]]*\/\//d' -e 's///g' -e '/^$/d' $CONF
			fi
			echo
		else
			echo "# $CONF - File not found"
		fi
		echo
	done
}

plog_files() {
	LOGLINES=$1
	shift
	for CONF in $@
	do
		BAD_FILE=$(echo $CONF | egrep "tbz$|bz2$|gz$|zip$")
		if [ -n "$BAD_FILE" ]; then
			continue
		fi
		echo "#==[ Log File ]=====================================#"
		if [ -f $CONF ]; then
			if [ $LOGLINES -eq 0 ]; then
				echo "# $CONF"
				sed -e 's///g' $CONF
			else
				echo "# $CONF - Last $LOGLINES Lines"
				tail -$LOGLINES $CONF | sed -e 's///g'
			fi
			echo
		else
			echo "# $CONF - File not found"
		fi
		echo
	done
}

plugin_message() {
	echo "$@"
}

plugin_command() {
	EXIT_STATUS=0
	CMDLINE_ORIG="$@"
	CMDBIN=$(echo $CMDLINE_ORIG | awk '{print $1}')
	CMD=$(\which $CMDBIN 2>/dev/null | awk '{print $1}')
	echo "#==[ Command ]======================================#"
	if [ -x "$CMD" ]; then
		CMDLINE=$(echo $CMDLINE_ORIG | sed -e "s!${CMDBIN}!${CMD}!")
		echo "# $CMDLINE"
		echo "$CMDLINE" | bash
		EXIT_STATUS=$?
	else
		echo "# $CMDLINE_ORIG"
		echo "ERROR: Command not found or not executable"
		EXIT_STATUS=1
	fi
	echo
	return $EXIT_STATUS
}

plugin_icommand() {
	EXIT_STATUS=0
        CMDLINE="$@"
        echo "#==[ Command ]======================================#"
        echo "# $CMDLINE"
        $CMDLINE
	EXIT_STATUS=$?
        echo
	return $EXIT_STATUS
}

validate_rpm() {
	echo
	THISRPM=$1
	echo "#==[ Validating RPM ]=================================#"
	echo "# rpm -V $THISRPM"
	if rpm -V $THISRPM; then
		echo "Status: Passed"
	else
		echo "Status: WARNING"
	fi
	echo
}


